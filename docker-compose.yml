services:
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    volumes:
      - mongo:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    networks:
      - elt_cluster

  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongo
    networks:
      - elt_cluster
  
  nifi:
    container_name: nifi
    build: ./Dockerfiles/nifi
    environment:
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=123456789101112
      - NIFI_JVM_HEAP_MAX=2g
    volumes:
      - nifi-data:/opt/nifi/nifi-current/Data
    ports:
      - 8443:8443
      - 5200:5200
    networks:
      - elt_cluster
    depends_on:
      - namenode
      
  namenode:
    build: ./Dockerfiles/hdfs/namenode
    container_name: namenode
    environment:
      - CLUSTER_NAME=elt_cluster
    ports:
      - "9870:9870"
      - "9000:9000"
      - "50070:50070"
      - "8020:8020"
    volumes:
      - namenode-data:/hadoop/dfs/name
    networks:
      - elt_cluster

  datanode1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode1
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - CORE_CONF_hadoop_http_staticuser_user=root
      - HDFS_CONF_dfs_replication=2
    depends_on:
      - namenode
    volumes:
      - datanode1-data:/hadoop/dfs/data
    networks:
      - elt_cluster

  datanode2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode2
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - CORE_CONF_hadoop_http_staticuser_user=root
      - HDFS_CONF_dfs_replication=2
    depends_on:
      - namenode
    volumes:
      - datanode2-data:/hadoop/dfs/data
    networks:
      - elt_cluster

  spark-master:
    #image: bitnami/spark:3.5.1
    build: ./Spark_scripts
    container_name: spark-master
    hostname: spark-master
    volumes:
      - ./Spark_scripts:/opt/bitnami/spark/scripts
    environment:
      - SPARK_MODE=master
    ports:
      - "8080:8080"
      - "7077:7077"
      - "4040:4040"
    networks:
      - spark_network
      - elt_cluster

  spark-worker:
    image: bitnami/spark:3.5.1
    deploy:
      replicas: 4
    hostname: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - "8081-8101:8081"
    networks:
      - spark_network
      - elt_cluster

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
     - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - elt_cluster

volumes:
  namenode-data:
  datanode1-data: 
  datanode2-data: 
  nifi-data:
  mongo:
  grafana-storage: {}

networks:
  elt_cluster:
    driver: bridge
  spark_network:
    driver: bridge
  